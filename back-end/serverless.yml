service: react-redux-cognito

frameworkVersion: '2'

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters
  - serverless-offline
  - serverless-cloudside-plugin

provider:
  name: aws
  region: us-east-1
  runtime: nodejs12.x
  memorySize: 256
  apiGateway:
    shouldStartNameWithService: true
  environment:
    COGNITO_GENERIC_USER_POOL_ID: !Ref GenericUserPool
    COGNITO_GENERIC_USER_CLIENT_ID: !Ref GenericUserClient
  iamRoleStatements:
    - Effect: Allow
      Action:
        - 'cognito-idp:AdminConfirmSignUp'
        - 'cognito-idp:AdminCreateUser'
        - 'cognito-idp:AdminGetUser'
        - 'cognito-idp:AdminSetUserPassword'
        - 'cognito-idp:AdminUpdateUserAttributes'
        - 'cognito-idp:AdminInitiateAuth'
        - 'cognito-idp:DescribeUserPool'
        - 'cognito-idp:ListUsers'
      Resource:
        - !GetAtt GenericUserPool.Arn

custom:
  serverless-offline:
    httpPort: 4321

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GenericUserPool:
      Type: 'AWS::Cognito::UserPool'
      Properties:
        UserPoolName: react-redux-cognito-generic-user
        MfaConfiguration: 'OFF'
        AccountRecoverySetting:
          RecoveryMechanisms:
            - Name: verified_email
              Priority: 1
        AliasAttributes:
          - email
          - preferred_username
        Schema:
          - Name: email
            Required: true
            Mutable: true
          # - Name: 'userId'
          #   Mutable: false
          #   AttributeDataType: String
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: true
            RequireNumbers: True
            RequireSymbols: False
            RequireUppercase: True
    GenericUserClient:
      Type: 'AWS::Cognito::UserPoolClient'
      Properties:
        ClientName: react-redux-cognito-generic-user-client
        UserPoolId:
          Ref: GenericUserPool
        GenerateSecret: False
        # AccessTokenValidity: 3600
        # IdTokenValidity: 3600
        # RefreshTokenValidity: 2592000 # num seconds in 30 days
        ExplicitAuthFlows:
          - ALLOW_USER_PASSWORD_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
          - ALLOW_ADMIN_USER_PASSWORD_AUTH
        # SupportedIdentityProviders:
        #   - COGNITO
        #   - FACEBOOK
        #   - Google

functions:
  signUp:
    handler: handlers/signUp.handler
    events:
      - http:
          path: users/sign-up
          method: post
          cors: true

  logIn:
    handler: handlers/logIn.handler
    events:
      - http:
          path: users/log-in
          method: post
          cors: true

  refreshAuthTokens:
    handler: handlers/refreshAuthTokens.handler
    events:
      - http:
          path: users/refresh
          method: post
          cors: true
